version: '3.8'

services:
  postgres:
    image: postgres:14-alpine
    container_name: rss_feed_postgres
    environment:
      POSTGRES_USER: rss_user
      POSTGRES_PASSWORD: rss_password
      POSTGRES_DB: rss_feed_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../../docs/database-schema.sql:/docker-entrypoint-initdb.d/schema.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rss_user -d rss_feed_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - rss_network

  redis:
    image: redis:7-alpine
    container_name: rss_feed_redis
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - rss_network

  # Optional: Redis Commander (Web UI for Redis)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: rss_feed_redis_commander
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - rss_network
    profiles:
      - tools

  # Optional: PgAdmin (Web UI for PostgreSQL)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: rss_feed_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@rssfeed.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - rss_network
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  rss_network:
    driver: bridge
